<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd   
	http://www.springframework.org/schema/context   
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
     http://www.springframework.org/schema/tx 
     http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
     http://www.springframework.org/schema/aop
     http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">
	<!-- 注册注解解析器 -->
	<context:annotation-config />
	<!-- 自动扫描路径 -->
	<context:component-scan base-package="com.zc" />
	<!-- 启用注解配置 -->
	<aop:aspectj-autoproxy />
	<!-- 加载db.properties配置文件 -->
	<context:property-placeholder location="classpath:db.properties" />
	
	<!-- 配置数据源需要commons-dbcp.jar和commons-pool.jar- -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${driver}" />
		<property name="url" value="${url}" />
		<property name="username" value="${db.username}" />
		<property name="password" value="${db.password}" />
		<!-- 连接池启动时的初始值 -->
		<property name="initialSize" value="${initialSize}" />
		<!-- 连接池的最大值 -->
		<property name="maxActive" value="${maxActive}" />
		<!-- 最大空闲值.当经过一个高峰时间后,连接池可以慢慢将已经用不到的连接慢慢释放一部分,一直减少到maxIdle为止 -->
		<property name="maxIdle" value="${maxIdle}" />
		<!-- 最小空闲值.当空闲的连接数少于阀值时,连接池就会预申请去一些连接,以免洪峰来时来不及申请 -->
		<property name="minIdle" value="${minIdle}" />
	</bean>
	<!-- SqlSessionFactory注册 -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 注入数据库连接池 -->
		<property name="dataSource" ref="dataSource" />
		<!-- 配置MyBaties全局配置文件:mybatis-config.xml -->
		<property name="configLocation" value="classpath:mybatis-spring.xml" />
		<!-- 扫描entity包 使用别名 -->
		<!-- <property name="typeAliasesPackage" value="com.glmapper.framerwork.entity" /> -->
		<!-- 扫描sql配置文件:mapper需要的xml文件;**表示包下的全部子包内容 -->
		<property name="mapperLocations" value="classpath:com/**/*Mapper.xml" />
	</bean>
	<!-- Mybatis会话模板 -->
	<bean id="sqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="sqlSessionFactory"/>
	</bean>
	<!-- /\/\/\ - - - - - -  /\/\/\ -->
	<!-- \/\/\/ - - - - - -  \/\/\/ -->
	<!-- 配置Spring数据源事务管理器 -->
	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	<!-- 基于注解的事物配置器 -->
	<!-- <tx:annotation-driven transaction-manager="txManager"/> -->

	<!-- 定义事务通知,指定事务管理器 -->
	<tx:advice id="transactionAdvice" transaction-manager="txManager">
		<tx:attributes>
			<!-- 设置事务行为 -->
			<tx:method name="list*" propagation="REQUIRED" />
			<tx:method name="get*" propagation="REQUIRED" />
			<tx:method name="add*" propagation="REQUIRED" />
			<tx:method name="delete*" propagation="REQUIRED" />
			<tx:method name="update*" propagation="REQUIRED" />
			<!-- 其它方法是用默认的事务行为 -->
			<tx:method name="*" propagation="NOT_SUPPORTED" read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<!-- 定义切入点;确定要拦截的方法(拦截所有类com.zc包中的方法) -->
		<aop:pointcut id="pc" expression="execution(* com.zc.dao.*.*(..))" />
		<!-- 定义事务通知 -->
		<aop:advisor pointcut-ref="pc" advice-ref="transactionAdvice" />
	</aop:config>
</beans>
